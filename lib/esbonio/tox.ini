[tox]
isolated_build = True
skip_missing_interpreters = true
min_version = 4.0
envlist = py{38,39,310,311}, py{38,39,310,311}-sphinx{5,6,7}

[testenv]
description = "Run the test suite for the server component of esbonio"
package = wheel
wheel_build_env = .pkg
deps =
    # Use git snapshot for `pygls` until a release containing the client is made
    git+https://github.com/openlawlibrary/pygls.git\#egg=pygls

    coverage[toml]
    pytest

    # Use git snapshot for `pytest-lsp` until the next release is made.
    git+https://github.com/swyddfa/lsp-devtools.git\#egg=pytest-lsp&subdirectory=lib/pytest-lsp
    #pytest-lsp>=0.3
set_env = COVERAGE_PROCESS_START={toxinidir}/pyproject.toml
commands_pre =
    python -c 'import pathlib; pathlib.Path("{env_site_packages_dir}/cov.pth").write_text("import coverage; coverage.process_startup()")'
    coverage erase
commands =
    coverage run -m pytest tests/server {posargs}
commands_post =
    coverage combine
    coverage report

[testenv:py{38,39,310,311}-sphinx{5,6,7}]
description = "Run the test suite for the sphinx agent component of esbonio"
deps =
    sphinx5: sphinx>=5,<6
    sphinx6: sphinx>=6,<7
    sphinx7: sphinx>=7,<8

    coverage[toml]
    pytest

    # Use git snapshot for `pytest-lsp` until the next release is made.
    git+https://github.com/swyddfa/lsp-devtools.git\#egg=pytest-lsp&subdirectory=lib/pytest-lsp
    #pytest-lsp>=0.3

    # Use git snapshot for `pygls` until a release containing the client is made
    git+https://github.com/openlawlibrary/pygls.git\#egg=pygls
set_env = COVERAGE_PROCESS_START={toxinidir}/pyproject.toml
commands_pre =
    python -c 'import pathlib; pathlib.Path("{env_site_packages_dir}/cov.pth").write_text("import coverage; coverage.process_startup()")'
    coverage erase
commands =
    python ../../scripts/check-sphinx-version.py
    pytest tests/sphinx-agent {posargs}
commands_post =
    coverage combine
    coverage report

[testenv:pkg]
description = "Package esbonio for distribution"
deps =
    build
skip_install = True
commands_pre =
commands = python -m build
commands_post =