{
    "name": "esbonio",
    "displayName": "Esbonio",
    "description": "An extension for editing sphinx projects",
    "repository": {
        "url": "https://github.com/swyddfa/esbonio"
    },
    "author": "Swyddfa Developers",
    "publisher": "swyddfa",
    "license": "MIT",
    "version": "0.7.2",
    "keywords": [
        "sphinx",
        "documentation"
    ],
    "categories": [
        "Programming Languages"
    ],
    "extensionPack": [
        "trond-snekvik.simple-rst"
    ],
    "scripts": {
        "compile": "webpack --mode development",
        "compile-test": "npm run clean && tsc -p ./",
        "watch": "webpack --mode development --watch",
        "test": "npm run compile-test && node ./dist/test/runTests.js",
        "clean": "rm -r dist",
        "deploy": "vsce publish --baseImagesUrl https://github.com/swyddfa/esbonio/raw/release/code/",
        "package": "vsce package --baseImagesUrl https://github.com/swyddfa/esbonio/raw/release/code/",
        "vscode:prepublish": "webpack --mode production"
    },
    "main": "dist/extension",
    "dependencies": {
        "jsdom": "^16.7.0",
        "semver": "^7.3.5",
        "vscode-languageclient": "^7.0.0"
    },
    "devDependencies": {
        "@types/glob": "^7.1.4",
        "@types/jsdom": "^16.2.13",
        "@types/mocha": "^8.2.3",
        "@types/node": "^14.17.15",
        "@types/semver": "^7.3.8",
        "@types/vscode": "1.61.0",
        "mocha": "^9.2.0",
        "ts-loader": "^8.3.0",
        "typescript": "^4.4.3",
        "vsce": "^2.6.7",
        "vscode-test": "^1.6.1",
        "webpack": "^5.52.1",
        "webpack-cli": "^4.8.0"
    },
    "engines": {
        "vscode": "^1.61.0"
    },
    "capabilities": {
        "virtualWorkspaces": {
            "supported": false
        },
        "untrustedWorkspaces": {
            "supported": false,
            "description": "Building and inspecting Sphinx projects has the potential to execute arbitrary code."
        }
    },
    "icon": "icon.png",
    "activationEvents": [
        "onLanguage:restructuredtext",
        "workspaceContains:**/conf.py"
    ],
    "contributes": {
        "commands": [
            {
                "command": "esbonio.insert.link",
                "title": "Insert Link",
                "category": "Esbonio"
            },
            {
                "command": "esbonio.insert.inlineLink",
                "title": "Insert Inline Link",
                "category": "Esbonio"
            },
            {
                "command": "esbonio.preview.open",
                "title": "Open Preview",
                "icon": "$(preview)",
                "category": "Esbonio"
            },
            {
                "command": "esbonio.preview.openSide",
                "title": "Open Preview to the Side",
                "icon": "$(open-preview)",
                "category": "Esbonio"
            },
            {
                "command": "esbonio.server.install",
                "title": "Install Language Server",
                "category": "Esbonio"
            },
            {
                "command": "esbonio.server.update",
                "title": "Update Language Server",
                "category": "Esbonio"
            },
            {
                "command": "esbonio.server.restart",
                "title": "Restart Language Server",
                "category": "Esbonio"
            }
        ],
        "configuration": [
            {
                "title": "Server",
                "properties": {
                    "esbonio.server.enabled": {
                        "scope": "window",
                        "type": "boolean",
                        "default": true,
                        "description": "Enable/Disable the language server"
                    },
                    "esbonio.server.enabledInPyFiles": {
                        "scope": "window",
                        "type": "boolean",
                        "default": true,
                        "description": "Enable/Disable the language server in Python files."
                    },
                    "esbonio.server.entryPoint": {
                        "scope": "window",
                        "type": "string",
                        "default": "esbonio",
                        "description": "The entry point to use when launching the server."
                    },
                    "esbonio.server.excludedModules": {
                        "scope": "window",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of modules to exclude from the server's configuration"
                    },
                    "esbonio.server.includedModules": {
                        "scope": "window",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of additional modules to include in the server's configuration"
                    },
                    "esbonio.server.logLevel": {
                        "scope": "window",
                        "type": "string",
                        "default": "error",
                        "enum": [
                            "debug",
                            "info",
                            "error"
                        ],
                        "description": "The level of log message to show in the log"
                    },
                    "esbonio.server.logFilter": {
                        "scope": "window",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of logger names to limit output from"
                    },
                    "esbonio.server.pythonPath": {
                        "scope": "window",
                        "type": "string",
                        "default": "",
                        "description": "The path to the Python interpreter to use when running the Langague Server.\n\nBy default this extension will try to use the interpreter configured via the Python Extension. If you do not use the Python Extension or you wish to use a different environment, then this option can be used to override the default behavior."
                    },
                    "esbonio.server.hideSphinxOutput": {
                        "scope": "window",
                        "type": "boolean",
                        "default": false,
                        "description": "Hide Sphinx build output from the Language Server log."
                    },
                    "esbonio.server.installBehavior": {
                        "scope": "window",
                        "type": "string",
                        "default": "prompt",
                        "enum": [
                            "nothing",
                            "prompt",
                            "automatic"
                        ],
                        "enumDescriptions": [
                            "Don't attempt to install the Language Server if it's missing",
                            "Ask for confirmation before installing the Language Server",
                            "Never ask for confirmation, the Language Server will be installed automatically in new environments"
                        ],
                        "description": "When the Language Server is missing from an environment, how should the extension handle it"
                    },
                    "esbonio.server.updateBehavior": {
                        "scope": "window",
                        "type": "string",
                        "default": "promptMajor",
                        "enum": [
                            "promptAlways",
                            "promptMajor",
                            "automatic"
                        ],
                        "enumDescriptions": [
                            "Always ask for confirmation when applying updates.",
                            "Only ask for confirmation on major updates, minor versions will be installed automatically",
                            "Never ask for confirmation, updates will always be installed automatically"
                        ],
                        "description": "When an update to the Language Server is detected, how should the extension handle it"
                    },
                    "esbonio.server.updateFrequency": {
                        "scope": "window",
                        "type": "string",
                        "default": "weekly",
                        "enum": [
                            "never",
                            "monthly",
                            "weekly",
                            "daily"
                        ],
                        "enumDescriptions": [
                            "Never check for updates. Updates can still be triggered manually through the command palette.",
                            "Check for updates monthly",
                            "Check for updates weekly",
                            "Check for updates daily"
                        ],
                        "description": "How often should the extension check for updates to the Language Server"
                    }
                }
            },
            {
                "title": "Sphinx",
                "properties": {
                    "esbonio.sphinx.buildDir": {
                        "scope": "window",
                        "type": "string",
                        "default": null,
                        "description": "The directory in which to store Sphinx's build output.\n\nBy default the Language Server will store any build files in a storage area provided by VSCode, this option allows you to override this to be a directory of your choosing e.g. your local _build/ directory.",
                        "markdownDescription": "The directory in which to store Sphinx's build output.\n\nBy default the Language Server will store any build files in a storage area provided by VSCode, this option allows you to override this to be a directory of your choosing e.g. your local `_build/` directory."
                    },
                    "esbonio.sphinx.confDir": {
                        "scope": "window",
                        "type": "string",
                        "default": null,
                        "description": "The Language Server should be able to automatically find the folder containing your project's 'conf.py' file. However this setting can be used to force the Language Server to use a particular directory if required."
                    },
                    "esbonio.sphinx.srcDir": {
                        "scope": "window",
                        "type": "string",
                        "default": null,
                        "description": "The directory containing your rst source files. By default the Language Server will assume this is the same as `esbonio.sphinx.confDir` but this opton can override this if necessary.",
                        "markdownDescription": "The directory containing your rst source files. By default the Language Server will assume this is the same as `#esbonio.sphinx.confDir#` but this opton can override this if necessary."
                    }
                }
            }
        ],
        "keybindings": [
            {
                "command": "esbonio.insert.inlineLink",
                "key": "alt+l",
                "when": "editorTextFocus && editorLangId == restructuredtext"
            },
            {
                "command": "esbonio.insert.link",
                "key": "alt+shift+l",
                "when": "editorTextFocus && editorLangId == restructuredtext"
            },
            {
                "command": "esbonio.preview.open",
                "key": "ctrl+shift+v",
                "when": "editorTextFocus && editorLangId == restructuredtext"
            },
            {
                "command": "esbonio.preview.openSide",
                "key": "ctrl+k v",
                "when": "editorTextFocus && editorLangId == restructuredtext"
            }
        ],
        "languages": [
            {
                "id": "restructuredtext",
                "extensions": [
                    ".rst",
                    ".rest"
                ],
                "aliases": [
                    "reStructuredText",
                    "restructuredtext",
                    "ReStructured Text",
                    "reStructured Text",
                    "RST",
                    "ReST",
                    "reST"
                ]
            }
        ],
        "menus": {
            "editor/title": [
                {
                    "command": "esbonio.preview.openSide",
                    "alt": "esbonio.preview.open",
                    "group": "navigation",
                    "when": "resourceLangId == restructuredtext"
                }
            ]
        }
    }
}
