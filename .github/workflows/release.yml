name: Release
on:
  push:
    branches:
    - release

jobs:
  # Simple job the checks to see which parts we actually have to build.
  trigger:
    name: Trigger
    runs-on: ubuntu-latest
    outputs:
      docs: ${{steps.check-docs.outputs.build}}
      extensions: ${{steps.check-extensions.outputs.build}}
      lsp: ${{steps.check-lsp.outputs.build}}
      vscode: ${{steps.check-vscode.outputs.build}}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - run: |
        if [ -z "${BASE_REF}" ]; then
          echo "BASE=HEAD^" >> $GITHUB_ENV
        else
          echo "BASE=origin/${BASE_REF}" >> $GITHUB_ENV
        fi
      name: Determine base
      env:
        BASE_REF: ${{ github.base_ref }}

    - id: check-vscode
      run: |
        set -e
        echo ${BASE}

        ./scripts/should-build.sh vscode
      name: "Build VSCode?"

    - id: check-extensions
      run: |
        set -e
        echo ${BASE}

        ./scripts/should-build.sh extensions
      name: "Build Extensions?"

    - id: check-lsp
      run: |
        set -e
        echo ${BASE}

        ./scripts/should-build.sh lsp
      name: "Build LSP?"

  vscode:
    name: VSCode Extension
    needs: [trigger, extensions]
    if: always() && needs.trigger.outputs.vscode
    runs-on: ubuntu-latest
    steps:
    - uses: 'actions/checkout@v3'

    - uses: 'actions/setup-node@v3'
      with:
        node-version: 16.x

    - uses: 'actions/setup-python@v4'
      with:
        python-version: "3.10"

    - run: |
        sudo apt update
        sudo apt install pandoc

        python --version
        python -m pip install --upgrade pip
        python -m pip install --upgrade tox bump2version towncrier docutils
      name: Install Build Tools

    - run: |
        set -e

        ./scripts/make-release.sh vscode
      name: Set Version
      id: info

    - run: |
        cd code
        npm ci
        npm run package
      name: Package Extension

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: 'vsix'
        path: code/*.vsix

    - name: 'Publish Extension'
      run: |
        cd code
        npm run deploy
      env:
        VSCE_PAT: ${{ secrets.VSCODE_PAT }}

    - name: Create Release
      run: |
        gh release create "${RELEASE_TAG}" \
          --title "Esbonio VSCode Extension v${VERSION} - ${RELEASE_DATE}" \
          -F code/.changes.html \
          ./code/*.vsix
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  extensions:
    name: "Sphinx Extensions"
    needs: [trigger, lsp]
    if: always() && needs.trigger.outputs.extensions
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - run: |
        sudo apt update
        sudo apt install pandoc

        python --version
        python -m pip install --upgrade pip
        python -m pip install --upgrade tox bump2version towncrier docutils
      name: Setup Environment

    - run: |
        set -e

        ./scripts/make-release.sh extensions
      name: Set Version
      id: info

    - name: Package
      run: |
        cd lib/esbonio-extensions
        python -m tox -e pkg

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: 'dist'
        path: lib/esbonio-extensions/dist

    - name: Publish
      id: assets
      run: |
        cd lib/esbonio-extensions
        python -m pip install twine
        python -m twine upload dist/* -u alcarney -p ${{ secrets.PYPI_PASS }}

    - name: Create Release
      run: |
        gh release create "${RELEASE_TAG}" \
          --title "Esbonio Extensions v${VERSION} - ${RELEASE_DATE}" \
          -F lib/esbonio-extensions/.changes.html \
          ./lib/esbonio-extensions/dist/*
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lsp:
    name: Language Server
    needs: trigger
    if: always() && needs.trigger.outputs.lsp
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - run: |

        sudo apt update
        sudo apt install pandoc

        python --version
        python -m pip install --upgrade pip
        python -m pip install --upgrade tox bump2version towncrier docutils
      name: Setup Environment

    - run: |
        set -e

        ./scripts/make-release.sh lsp
      name: Set Version
      id: info

    - name: Package
      run: |
        cd lib/esbonio
        python -m tox -e pkg

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: 'dist'
        path: lib/esbonio/dist

    - name: Publish
      run: |
        cd lib/esbonio
        python -m pip install twine
        python -m twine upload dist/* -u alcarney -p ${{ secrets.PYPI_PASS }}

    - name: Create Release
      run: |
        gh release create "${RELEASE_TAG}" \
          --title "Esbonio Language Server v${VERSION} - ${RELEASE_DATE}" \
          -F lib/esbonio/.changes.html \
          ./lib/esbonio/dist/*
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
