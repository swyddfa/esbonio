name: Esbonio

on:
  pull_request:
    branches:
    - release
    - develop
  push:
    branches:
    - release

jobs:
  # Simple job the checks to see which parts we actually have to build.
  trigger:
    name: Trigger
    runs-on: ubuntu-latest
    outputs:
      docs: ${{steps.check-docs.outputs.build}}
      python: ${{steps.check-python.outputs.build}}
      vscode: ${{steps.check-vscode.outputs.build}}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - run: |
        if [ -z "${BASE_REF}" ]; then
          echo "BASE=HEAD^" >> $GITHUB_ENV
        else
          echo "BASE=origin/${BASE_REF}" >> $GITHUB_ENV
        fi
      name: Determine base
      env:
        BASE_REF: ${{ github.base_ref }}

    - id: check-vscode
      run: |
        set -e
        echo ${BASE}

        ./scripts/should-build.sh vscode
      name: "Build VSCode?"

    - id: check-python
      run: |
        set -e
        echo ${BASE}

        ./scripts/should-build.sh python
      name: "Build Python?"

    - id: check-docs
      run: |
        set -e
        echo ${BASE}

        ./scripts/should-build.sh docs
      name: "Build Docs?"

  vscode:
    name: VSCode
    needs: trigger
    if: ${{ needs.trigger.outputs.vscode }}
    runs-on: ubuntu-20.04 # TODO: Enable windows, macOS builds.
    steps:
    - uses: 'actions/checkout@v2'

    - uses: 'actions/setup-node@v1'
      with:
        node-version: 12.x

    - uses: 'actions/setup-python@v1'
      with:
        python-version: 3.8

    - run: |
        sudo apt update
        sudo apt install pandoc

        python --version
        python -m pip install --upgrade pip
        python -m pip install --upgrade tox bump2version towncrier docutils

      name: Install Build Tools

    - run: |
        set -e

        ./scripts/make-release.sh vscode
      name: Set Version
      id: info

    - run: |
        cd code
        npm install

        mkdir dist
        npm run test-grammar
        xvfb-run -a npm test
      name: Test Extension

    - run: |
        cd code

        rm -r dist
        npm run compile
      name: Build Extension

    - run: |
        cd code
        npm run package

        vsix=$(find . -name '*.vsix' -exec basename {} \;)
        echo "::set-output name=VSIX::$vsix"
      id: assets
      name: Package

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: 'vsix'
        path: code/${{ steps.assets.outputs.VSIX }}

    - name: 'Publish Extension'
      run: |
        cd code
        npm run deploy
      env:
        VSCE_PAT: ${{ secrets.VSCODE_PAT }}
      if: success() && startsWith(github.ref, 'refs/heads/release')

    - name: Create Release
      id: release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.info.outputs.TAG }}
        release_name: Esbonio VSCode Extension v${{ steps.info.outputs.VERSION  }} - ${{ steps.info.outputs.DATE }}
        body_path: code/.changes.html
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: success() && startsWith(github.ref, 'refs/heads/release')

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: code/${{ steps.assets.outputs.VSIX }}
        asset_name: ${{ steps.assets.outputs.VSIX }}
        asset_content_type: application/octet-stream
      if: success() && startsWith(github.ref, 'refs/heads/release')

  python:
    name: Python ${{ matrix.python-version }}
    needs: trigger
    if: ${{ needs.trigger.outputs.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-20.04]
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - run: |
        sudo apt update
        sudo apt install pandoc

        python --version
        python -m pip install --upgrade pip
        python -m pip install --upgrade tox bump2version towncrier docutils
      name: Setup Environment

    - run: |
        set -e

        ./scripts/make-release.sh python
      name: Set Version
      id: info
      if: matrix.python-version == '3.8'

    - run: |
        cd lib/esbonio
        python -m tox -e py`echo ${{ matrix.python-version }} | tr -d .`
      name: Test

    - name: Package
      run: |
        cd lib/esbonio
        python -m tox -e pkg
      if: matrix.python-version == '3.8'

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: 'whl'
        path: lib/esbonio/dist
      if: matrix.python-version == '3.8'

    - name: Publish
      id: assets
      run: |
        cd lib/esbonio
        python -m pip install twine
        python -m twine upload dist/* -u alcarney -p ${{ secrets.PYPI_PASS }}

        whl=$(find dist/ -name '*.whl' -exec basename {} \;)
        echo "::set-output name=WHL::$whl"

        src=$(find dist/ -name '*.tar.gz' -exec basename {} \;)
        echo "::set-output name=SRC::$src"
      if: success() && matrix.python-version == '3.8' && startsWith(github.ref, 'refs/heads/release')

    - name: Create Release
      id: release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.info.outputs.TAG }}
        release_name: Esbonio Lib v${{ steps.info.outputs.VERSION  }} - ${{ steps.info.outputs.DATE }}
        body_path: lib/esbonio/.changes.html
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: success() && matrix.python-version == '3.8' && startsWith(github.ref, 'refs/heads/release')

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: lib/esbonio/dist/${{ steps.assets.outputs.WHL }}
        asset_name: ${{ steps.assets.outputs.WHL }}
        asset_content_type: application/octet-stream
      if: success() && matrix.python-version == '3.8' && startsWith(github.ref, 'refs/heads/release')

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: lib/esbonio/dist/${{ steps.assets.outputs.SRC }}
        asset_name: ${{ steps.assets.outputs.SRC }}
        asset_content_type: application/octet-stream
      if: success() && matrix.python-version == '3.8' && startsWith(github.ref, 'refs/heads/release')

  docs:
    name: Documentation
    needs: trigger
    if: ${{ needs.trigger.outputs.docs }}
    runs-on: ubuntu-20.04
    steps:
    - uses: 'actions/checkout@v2'
      with:
        persist-credentials: false

    - uses: 'actions/setup-python@v1'
      with:
        python-version: 3.8

    - run: |
        set -e
        cd docs

        python --version
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt

      name: Setup Environment

    - run: |
        set - e

        cd docs
        make html
      name: Build Docs

    - name: 'Upload Aritfact'
      uses: 'actions/upload-artifact@v1.0.0'
      with:
        name: 'docs'
        path: 'docs/_build/html'

    - name: 'Publish Docs'
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: docs/_build/html
        TARGET_FOLDER: docs/
        CLEAN: true
      if: success() && startsWith(github.ref, 'refs/heads/release')
