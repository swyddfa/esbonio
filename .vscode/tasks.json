{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "npm",
            "script": "webpack",
            "isBackground": false,
            "options": {
                "cwd": "${workspaceRoot}/code"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "panel": "dedicated",
                "reveal": "never"
            },
            "problemMatcher": [
                "$tsc-watch"
            ]
        },
        {
            "label": "Build Tests",
            "type": "npm",
            "script": "compile-test",
            "isBackground": false,
            "options": {
                "cwd": "${workspaceRoot}/code"
            },
            "group": "build",
            "presentation": {
                "panel": "dedicated",
                "reveal": "never",
            },
            "problemMatcher": [
                "$tsc-watch"
            ]
        },
        {
            "label": "Build Docs",
            "type": "shell",
            "command": "source ${workspaceRoot}/.env/bin/activate && make html",
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceRoot}/docs"
            }
        },
        {
            "label": "Grammar Tests",
            "type": "shell",
            "command": "npx vscode-tmgrammar-test -c -s source.rst -g rst.tmLanguage.json -g tests/python.tmLanguage.json -t \"**/*.rst\"",
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            },
            "options": {
                "cwd": "${workspaceRoot}/code/syntaxes"
            },
            "problemMatcher": {
                "fileLocation": [
                    "relative",
                    "${workspaceRoot}/code/syntaxes"
                ],
                "pattern": [
                    {
                        "regexp": "^(ERROR)\\s([^:]+):(\\d+):(\\d+):(\\d+)\\s(.*)$",
                        "severity": 1,
                        "file": 2,
                        "line": 3,
                        "column": 4,
                        "endColumn": 5,
                        "message": 6
                    }
                ]
            }
        }
    ]
}